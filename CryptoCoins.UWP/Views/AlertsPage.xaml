<local:MvvmPage
    x:Class="CryptoCoins.UWP.Views.AlertsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CryptoCoins.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:grid="using:Telerik.UI.Xaml.Controls.Grid"
    xmlns:entities="using:CryptoCoins.UWP.Views.Entities"
    xmlns:primitives="using:Telerik.UI.Xaml.Controls.Grid.Primitives"
    xmlns:entities1="using:CryptoCoins.UWP.ViewModels.Entities"
    xmlns:core="using:Telerik.Data.Core"
    xmlns:storageEntities="using:CryptoCoins.UWP.Models.StorageEntities"
    xmlns:formatter="using:CryptoCoins.UWP.Views.Formatter"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CryptoCoins.UWP.Platform.Behaviors"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:commands="using:Telerik.UI.Xaml.Controls.Grid.Commands"
    DataContext="{Binding Alerts, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <local:MvvmPage.Resources>
        <Style x:Key="HorizontalToggleSwitchStyle" TargetType="ToggleSwitch">
            <Setter Property="Foreground" Value="{ThemeResource ToggleSwitchContentForeground}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="MinWidth" Value="154"/>
            <Setter Property="ManipulationMode" Value="System,TranslateX"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleSwitch">
                        <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition MaxWidth="12" Width="12"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition MaxWidth="12" Width="12"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOff">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOn">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="SwitchAreaGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="StrokeThickness" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOff">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOn">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="SwitchAreaGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OffContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OnContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOff">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOn">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="SwitchAreaGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ToggleStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" GeneratedDuration="0" To="On">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOn">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOff">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" GeneratedDuration="0" To="Off">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OnToOffTransition" From="On" GeneratedDuration="0" To="Off">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OffToOnTransition" From="Off" GeneratedDuration="0" To="On">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOn">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOff">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Dragging"/>
                                    <VisualState x:Name="Off"/>
                                    <VisualState x:Name="On">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="24" Storyboard.TargetProperty="X" Storyboard.TargetName="KnobTranslateTransform"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobBounds">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOn">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOff">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ContentStates">
                                    <VisualState x:Name="OffContent">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OffContentPresenter"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <x:Boolean>True</x:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OnContent">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OnContentPresenter"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <x:Boolean>True</x:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" Grid.Row="1" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource ToggleSwitchHeaderForeground}" IsHitTestVisible="False" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <Grid x:Name="SwitchAreaGrid" Background="{ThemeResource ToggleSwitchContainerBackground}" Grid.Column="2" Grid.ColumnSpan="3" Control.IsTemplateFocusTarget="True" Margin="0,5" Grid.Row="0" Grid.RowSpan="3"/>
                            <ContentPresenter x:Name="OffContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OffContentTemplate}" Content="{TemplateBinding OffContent}" Grid.Column="4" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="OnContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OnContentTemplate}" Content="{TemplateBinding OnContent}" Grid.Column="4" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="OuterBorder" Fill="{ThemeResource ToggleSwitchFillOff}" Height="20" RadiusY="10" Grid.Column="2" Grid.Row="1" RadiusX="10" Stroke="{ThemeResource ToggleSwitchStrokeOff}" StrokeThickness="2" Width="44"/>
                            <Rectangle x:Name="SwitchKnobBounds" Fill="{ThemeResource ToggleSwitchFillOn}" Height="20" Opacity="0" RadiusY="10" Grid.Column="2" Grid.Row="1" RadiusX="10" Stroke="{ThemeResource ToggleSwitchStrokeOn}" StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" Width="44"/>
                            <Grid x:Name="SwitchKnob" HorizontalAlignment="Left" Height="20" Grid.Column="2" Grid.Row="1" Width="20">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="KnobTranslateTransform"/>
                                </Grid.RenderTransform>
                                <Ellipse x:Name="SwitchKnobOn" Fill="{ThemeResource ToggleSwitchKnobFillOn}" Height="10" Opacity="0" Width="10"/>
                                <Ellipse x:Name="SwitchKnobOff" Fill="{ThemeResource ToggleSwitchKnobFillOff}" Height="10" Width="10"/>
                            </Grid>
                            <Thumb x:Name="SwitchThumb" AutomationProperties.AccessibilityView="Raw" Grid.Column="2" Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Rectangle Fill="Transparent"/>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </local:MvvmPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
    <RelativePanel Margin="{StaticResource LeftRightMargin}">
        <TextBlock x:Uid="AlertsPage_Title" x:Name="Title" Style="{StaticResource PageTitleStyle}"/>
        <AutoSuggestBox x:Name="SearchBox" x:Uid="AlertsPage_Search" Margin="36,0,0,7" RelativePanel.RightOf="Title" RelativePanel.AlignBottomWith="Title" Text="{x:Bind ViewModel.SearchQuery, Mode=TwoWay}"/>
        <ToggleSwitch x:Name="DisableAllToggle" x:Uid="AlertsPage_DisableAll" Margin="0,0,0,7" IsOn="{x:Bind ViewModel.IsAlertsEnabled, Converter={StaticResource BoolNegationConverter}}" Style="{StaticResource HorizontalToggleSwitchStyle}" />

            <grid:RadDataGrid x:Name="AlertsList" Margin="0,10,0,0" RelativePanel.Below="DisableAllToggle" UserGroupMode="Disabled"
                                  UserColumnReorderMode="None" UserFilterMode="Disabled"
                                  GridLinesVisibility="None" SelectionMode="None" AlternationStartIndex="1"
                                  AlternationStep="2" GridLinesBrush="Transparent" AlternateRowBackground="{StaticResource ConversionListOddBackgroundBrush}"
                                  ItemsSource="{x:Bind ViewModel.Alerts, Mode=OneWay}"
                                  AutoGenerateColumns="False"
                                  RowHeight="36" GridLinesThickness="0"
                                  BorderThickness="0" Style="{StaticResource ThemedDataGrid}">
                <grid:RadDataGrid.FilterDescriptors>
                    <entities:AlertFilterDescriptor SearchQuery="{x:Bind ViewModel.SearchQuery,Mode=OneWay}"/>
                </grid:RadDataGrid.FilterDescriptors>
                <grid:RadDataGrid.Commands>
                    <commands:DataGridUserCommand Id="CellTap" EnableDefaultCommand="False">
                        <commands:DataGridUserCommand.Command>
                            <entities:UnwrapParameterCommand x:Name="UnwrapGridCellTapCommand"
                                                                 Command="{x:Bind ViewModel.OpenEditingDialogCommand}" />
                        </commands:DataGridUserCommand.Command>
                    </commands:DataGridUserCommand>
                </grid:RadDataGrid.Commands>
                <grid:RadDataGrid.Resources>
                <entities:AlertCoinNameLookup x:Key="CoinNameLookup" />
                <entities:AlertTargetValueLookup x:Key="TargetValueLookup" />
                <SolidColorBrush x:Key="TelerikGridInnerShadowBrush" Color="{ThemeResource ConversionListHeaderBackgroundColor}"/>
                <SolidColorBrush x:Key="TelerikGridShadowBrush" Color="{ThemeResource ConversionListHeaderBackgroundColor}"/>
                <Style TargetType="primitives:DataGridColumnHeader">
                    <Setter Property="Foreground" Value="{ThemeResource TelerikGridHeaderForegroundBrush}"/>
                    <Setter Property="Background" Value="{ThemeResource ConversionListHeaderBackgroundBrush}" />
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Style>
            </grid:RadDataGrid.Resources>
            <grid:RadDataGrid.Columns>
                <grid:DataGridTemplateColumn x:Uid="AlertsPage_CoinColumn">
                    <grid:DataGridTemplateColumn.CellContentTemplate>
                        <DataTemplate x:DataType="storageEntities:AlertModel">
                            <StackPanel Orientation="Horizontal">
                                <Image VerticalAlignment="Center" Margin="8,0,0,0">
                                    <Image.Source>
                                        <BitmapImage
                                                    UriSource="{x:Bind FromIcon, Converter={StaticResource StringToUriConverter}, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}"
                                                    DecodePixelHeight="16" DecodePixelWidth="16"
                                                    DecodePixelType="Logical" />
                                    </Image.Source>
                                </Image>
                                    <TextBlock
                                            Text="{x:Bind formatter:Currency.FormatName(FromName, FromCode)}"
                                            VerticalAlignment="Center" Margin="8,0,0,0" />
                                </StackPanel>
                        </DataTemplate>
                    </grid:DataGridTemplateColumn.CellContentTemplate>
                    <grid:DataGridTemplateColumn.SortDescriptor>
                        <core:DelegateSortDescriptor KeyLookup="{StaticResource CoinNameLookup}" />
                    </grid:DataGridTemplateColumn.SortDescriptor>
                </grid:DataGridTemplateColumn>
                <grid:DataGridTemplateColumn x:Uid="AlertsPage_TargetColumn">
                    <grid:DataGridTemplateColumn.CellContentTemplate>
                        <DataTemplate x:DataType="storageEntities:AlertModel">
                            <TextBlock Text="{x:Bind formatter:Alert.FormatTarget(TargetValue, ToSymbol, TargetMode), Mode=OneWay}" VerticalAlignment="Center"
                                               Margin="8,0,0,0" />
                        </DataTemplate>
                    </grid:DataGridTemplateColumn.CellContentTemplate>
                    <grid:DataGridTemplateColumn.SortDescriptor>
                        <core:DelegateSortDescriptor KeyLookup="{StaticResource TargetValueLookup}" />
                    </grid:DataGridTemplateColumn.SortDescriptor>
                </grid:DataGridTemplateColumn>
                <grid:DataGridTemplateColumn x:Uid="AlertsPage_FrequencyColumn">
                    <grid:DataGridTemplateColumn.CellContentTemplate>
                        <DataTemplate x:DataType="storageEntities:AlertModel">
                            <TextBlock
                                        Text="{x:Bind formatter:Alert.FormatFrequency(Frequency), Mode=OneWay}"
                                        VerticalAlignment="Center" Margin="8,0,0,0" />
                        </DataTemplate>
                    </grid:DataGridTemplateColumn.CellContentTemplate>
                </grid:DataGridTemplateColumn>
                <grid:DataGridTemplateColumn x:Uid="AlertsPage_StatusColumn">
                    <grid:DataGridTemplateColumn.CellContentTemplate>
                        <DataTemplate x:DataType="storageEntities:AlertModel">
                            <ToggleSwitch IsOn="{x:Bind IsEnabled, Mode=TwoWay}"/>
                        </DataTemplate>
                    </grid:DataGridTemplateColumn.CellContentTemplate>
                </grid:DataGridTemplateColumn>
            </grid:RadDataGrid.Columns>
        </grid:RadDataGrid>


            <StackPanel x:Name="EmptyTemplate" Margin="0,0,0,48" RelativePanel.AlignHorizontalCenterWithPanel="True"
                        RelativePanel.AlignVerticalCenterWithPanel="True" x:DeferLoadStrategy="Lazy"
                        Visibility="Collapsed">
                <BitmapIcon UriSource="/Assets/Images/AlertBig.png" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Width="96" Height="96"  HorizontalAlignment="Center"/>
                <TextBlock x:Uid="AlertsPage_EmptyTemplateLine1" HorizontalAlignment="Center" Style="{StaticResource TitleTextBlockStyle}"/>
                <TextBlock x:Uid="AlertsPage_EmptyTemplateLine2" HorizontalAlignment="Center" Margin="0,6,0,0"/>
            </StackPanel>
        
            <StackPanel x:Name="FilteredEmptyTemplate" Margin="0,0,0,48" RelativePanel.AlignHorizontalCenterWithPanel="True"
                        RelativePanel.AlignVerticalCenterWithPanel="True" x:DeferLoadStrategy="Lazy"
                        Visibility="Collapsed">
                <BitmapIcon UriSource="/Assets/Images/AlertBig.png" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Width="96" Height="96"  HorizontalAlignment="Center"/>
                <TextBlock x:Uid="AlertsPage_FilteredEmptyTemplateLine1" HorizontalAlignment="Center" Style="{StaticResource TitleTextBlockStyle}"/>
                <TextBlock x:Uid="AlertsPage_FilteredEmptyTemplateLine2" HorizontalAlignment="Center" Margin="0,6,0,0"/>
            </StackPanel>

            <controls:Loading x:Name="LoadingTemplate" RelativePanel.AlignHorizontalCenterWithPanel="True"
                               RelativePanel.AlignVerticalCenterWithPanel="True"
                               IsLoading="{x:Bind ViewModel.ProgressState.IsOperating, Mode=OneWay}"
                               Visibility="Collapsed">
                <StackPanel Orientation="Horizontal">
                    <ProgressRing IsActive="True" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                    <TextBlock x:Uid="AlertsPage_Loading" Margin="12,0,0,0" VerticalAlignment="Center" />
                </StackPanel>
            </controls:Loading>


            
        </RelativePanel>
        <CommandBar x:Name="BottomBar" Grid.Row="1">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="AlertsPage_AddButton" Icon="Add" Command="{x:Bind ViewModel.OpenCreatingDialogCommand}"/>
            </CommandBar.PrimaryCommands>
        </CommandBar>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisableAllToggle.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="DisableAllToggle.(RelativePanel.AlignBottomWith)" Value="Title"/>
                        <Setter Target="SearchBox.MinWidth" Value="270"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisableAllToggle.(RelativePanel.Below)" Value="SearchBox"/>
                        <Setter Target="SearchBox.MinWidth" Value="160"/>
                        <Setter Target="Title.Margin" Value="{StaticResource PageTitleNarrowMargin}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="DataState">
                <VisualState x:Name="Available" />
                <VisualState x:Name="FilteredEmpty">
                    <VisualState.Setters>
                        <Setter Target="AlertsList.Visibility" Value="Collapsed" />
                        
                        <Setter Target="FilteredEmptyTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Empty">
                    <VisualState.Setters>
                        <Setter Target="SearchBox.Visibility" Value="Collapsed" />
                        <Setter Target="DisableAllToggle.Visibility" Value="Collapsed" />
                        <Setter Target="AlertsList.Visibility" Value="Collapsed" />

                        <Setter Target="EmptyTemplate.Visibility" Value="Visible" />
                        <Setter Target="LoadingTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unavailable"/>

                <VisualState x:Name="NotReady">
                    <VisualState.Setters>
                        <Setter Target="SearchBox.Visibility" Value="Collapsed" />
                        <Setter Target="DisableAllToggle.Visibility" Value="Collapsed" />
                        <Setter Target="AlertsList.Visibility" Value="Collapsed" />

                        <Setter Target="LoadingTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <interactivity:Interaction.Behaviors>
        <behaviors:VisualStateBehavior Group="DataState"
                                       State="{x:Bind ViewModel.DataState, Mode=OneWay, Converter={StaticResource EnumConverter}}" />
    </interactivity:Interaction.Behaviors>
</local:MvvmPage>

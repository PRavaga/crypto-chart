<dialogs:MvvmContentDialog
    x:Class="CryptoCoins.UWP.Views.AlertDialog"
    x:Name="Root"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helper="using:CryptoCoins.UWP.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:behaviors="using:CryptoCoins.UWP.Platform.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:dialogs="using:CryptoCoins.UWP.Platform.Dialogs"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:input="using:Telerik.UI.Xaml.Controls.Input"
    xmlns:entries="using:CryptoCoins.UWP.Models.Services.Entries"
    xmlns:services="using:CryptoCoins.UWP.Models.Services"
    xmlns:storageEntities="using:CryptoCoins.UWP.Models.StorageEntities"
    xmlns:controls="using:CryptoCoins.UWP.Views.Controls"
    xmlns:formatter="using:CryptoCoins.UWP.Views.Formatter"
    RequestedTheme="{x:Bind services:ThemeSelectorService.Theme}"
    mc:Ignorable="d"
    DataContext="{Binding AlertDialog, Source={StaticResource Locator}}">
    <dialogs:MvvmContentDialog.Resources>
        <Thickness x:Key="ContentDialogContentScrollViewerMargin">0,0,0,0</Thickness>
        <Style x:Key="AccentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAccentBrush}" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
            <Setter Property="Padding" Value="8,4,8,4" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemAccentColorLight1}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemAccentColorLight2}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="AutoSuggestBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AutoSuggestBox">
                        <Grid x:Name="LayoutRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Orientation">
                                    <VisualState x:Name="Landscape" />
                                    <VisualState x:Name="Portrait" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBox x:Name="TextBox"
                            Style="{TemplateBinding TextBoxStyle}"
                            PlaceholderText="{TemplateBinding PlaceholderText}"
                            Header="{TemplateBinding Header}"
                            Width="{TemplateBinding Width}"
                            ScrollViewer.BringIntoViewOnFocusChange="False"
                            Canvas.ZIndex="0"
                            Margin="0"
                            DesiredCandidateWindowAlignment="BottomEdge" />
                            <Popup x:Name="SuggestionsPopup">
                                <Border x:Name="SuggestionsContainer" MinWidth="220">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="UpwardTransform" />
                                    </Border.RenderTransform>
                                    <ListView x:Name="SuggestionsList"
                                    Background="{ThemeResource AutoSuggestBoxSuggestionsListBackground}"
                                    BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}"
                                    BorderBrush="{ThemeResource AutoSuggestBoxSuggestionsListBorderBrush}"
                                    DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                    IsItemClickEnabled="True"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                    MaxHeight="{ThemeResource AutoSuggestListMaxHeight}"
                                    Margin="{ThemeResource AutoSuggestListMargin}"
                                    Padding="{ThemeResource AutoSuggestListPadding}">
                                        <ListView.ItemContainerTransitions>
                                            <TransitionCollection />
                                        </ListView.ItemContainerTransitions>
                                    </ListView>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </dialogs:MvvmContentDialog.Resources>
    <UserControl x:Name="UserControl" IsTabStop="True">
        <StackPanel Orientation="Vertical">
            <Grid Margin="0,4,0,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <AutoSuggestBox x:Name="CoinInput" x:Uid="AlertDialog_CoinInput" Grid.Column="0" ItemsSource="{x:Bind ViewModel.Coins, Mode=OneWay}" 
                          HorizontalAlignment="Stretch" TextChanged="OnCoinInputChanged" TextMemberPath="Code" IsSuggestionListOpen="False" Text="{x:Bind ViewModel.CoinQuery, Mode=TwoWay}" SuggestionChosen="CoinInput_OnSuggestionChosen" >
                    <AutoSuggestBox.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Width" Value="500"/>
                            <Setter Property="MaxWidth" Value="500"/>
                        </Style>
                    </AutoSuggestBox.ItemContainerStyle>
                    <AutoSuggestBox.ItemTemplate>
                        <DataTemplate x:DataType="entries:CryptoCurrencyInfo">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{x:Bind Icon, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}"/>
                                <TextBlock Margin="8,0,0,0" Text="{x:Bind formatter:Currency.FormatName(Name, Code)}"/>
                            </StackPanel>
                        </DataTemplate>
                    </AutoSuggestBox.ItemTemplate>
                </AutoSuggestBox>
                <ComboBox Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" ItemsSource="{x:Bind ViewModel.Currencies}" SelectedItem="{x:Bind ViewModel.TargetCode, Mode=TwoWay}"/>

                <ComboBox x:Uid="AlertDialog_TargetModeSelect" Grid.Row="1" Grid.Column="0" Margin="0,20,0,0" HorizontalAlignment="Stretch" ItemsSource="{x:Bind ViewModel.Modes}" SelectedItem="{x:Bind ViewModel.TargetMode, Mode=TwoWay}"/>
                <controls:NumericTextBox Grid.Row="1" Grid.Column="2" x:Uid="AlertDialog_AmountField" InputScope="Number"
                         Value="{x:Bind ViewModel.Amount, Mode=TwoWay}" MinWidth="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>

                <TextBlock x:Uid="AlertDialog_FrequencyLabel" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" Margin="0,20,0,0"/>
                <RadioButton x:Name="FrequencyOneTime" x:Uid="AlertDialog_Frequency_OneTime" Grid.Column="0" Grid.Row="3" GroupName="FrequencyGroup" Command="{x:Bind ViewModel.ToggleFrequency}">
                    <RadioButton.CommandParameter>
                        <storageEntities:AlertFrequency>OneTime</storageEntities:AlertFrequency>
                    </RadioButton.CommandParameter>
                </RadioButton>
                <RadioButton x:Name="FrequencyEveryTime" x:Uid="AlertDialog_Frequency_EveryTime" Grid.Column="2" Grid.Row="3" GroupName="FrequencyGroup" Command="{x:Bind ViewModel.ToggleFrequency}">
                    <RadioButton.CommandParameter>
                        <storageEntities:AlertFrequency>EveryTime</storageEntities:AlertFrequency>
                    </RadioButton.CommandParameter>
                </RadioButton>

            </Grid>
            <Grid Margin="0,12,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition x:Name="MiddleColumn" Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>


                <Button x:Uid="AlertDialog_SaveButton" Grid.Column="0" Margin="0,0,6,0" HorizontalAlignment="Stretch" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.SaveCommand}"/>
                <Button x:Name="RemoveButton" x:Uid="AlertDialog_RemoveButton" Grid.Column="1" Margin="6,0,6,0" HorizontalAlignment="Stretch" Command="{x:Bind ViewModel.DeleteCommand}"/>
                <Button x:Uid="AlertDialog_CancelButton" Grid.Column="2" Margin="6,0,0,0" HorizontalAlignment="Stretch" Command="{x:Bind ViewModel.CancelCommand}"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="WindowStates">
                    <VisualState x:Name="WideState">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="680" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="UserControl.Width" Value="412"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="NarrowState">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="0" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="UserControl.Width" Value="Auto"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Mode">
                    <VisualState x:Name="Creating">
                        <VisualState.Setters>
                            <Setter Target="RemoveButton.Visibility" Value="Collapsed" />
                            <Setter Target="MiddleColumn.Width" Value="0" />
                            <Setter x:Name="TitleSetter" Target="Root.Title" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Editing">
                        <VisualState.Setters>
                            <Setter x:Name="EditingTitleSetter" Target="Root.Title"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </StackPanel>
        <interactivity:Interaction.Behaviors>
            <behaviors:VisualStateBehavior Group="Mode"
                                           State="{x:Bind ViewModel.Mode, Mode=OneWay, Converter={StaticResource EnumConverter}}" />
        </interactivity:Interaction.Behaviors>
    </UserControl>
</dialogs:MvvmContentDialog>

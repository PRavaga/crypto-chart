<views:MvvmPage
    x:Class="CryptoCoins.UWP.Views.DashboardPage"
    x:Name="DbPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:CryptoCoins.UWP.Views"
    xmlns:entries="using:CryptoCoins.UWP.Models.Services.Entries"
    xmlns:chart="using:Telerik.UI.Xaml.Controls.Chart"
    xmlns:controls="using:CryptoCoins.UWP.Views.Controls"
    xmlns:viewModels="using:CryptoCoins.UWP.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CryptoCoins.UWP.Platform.Behaviors"
    xmlns:converters="using:CryptoCoins.UWP.Platform.Converters"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:backgroundTasks="using:CryptoCoins.UWP.Platform.BackgroundTasks"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:helpers="using:CryptoCoins.UWP.Helpers"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:formatter="using:CryptoCoins.UWP.Views.Formatter"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d"
    DataContext="{Binding Dashboard, Source={StaticResource Locator}}">
    <views:MvvmPage.Resources>
    </views:MvvmPage.Resources>
    <Grid
        x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<Grid>
            <TextBlock x:Name="Offscreen" Text="Offscreen" />
            <Rectangle Fill="{StaticResource ContentBackgroundBrush}"/>
        </Grid>-->
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <TextBlock
            x:Name="TitlePage"
            x:Uid="DashboardPage_Title"
            Style="{StaticResource PageTitleStyle}"
            Margin="24,15,12,7" />

            <ComboBox MinWidth="200" Margin="24,15,0,7" VerticalAlignment="Bottom"
                  ItemsSource="{x:Bind ViewModel.FeaturedPreferences}"
                  SelectedValue="{x:Bind ViewModel.SelectedFeaturedPreference, Mode=TwoWay}"
                  DisplayMemberPath="Description" />
        </StackPanel>
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <Grid Margin="24,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <GridView x:Name="FeaturedConversions" Grid.Row="0" Margin="-8,4,-8,0"
                          ItemsSource="{x:Bind ViewModel.FeaturedConversions, Mode=OneWay}"
                          CanDragItems="True" SelectionMode="None" ScrollViewer.VerticalScrollMode="Disabled"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          CanReorderItems="True" AllowDrop="True" Visibility="Collapsed">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="Margin" Value="8,8" />
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="entries:DetailedConversionInfo">
                            <RelativePanel Width="268" Height="140" BorderThickness="1"
                                           Background="{ThemeResource ConversionTileBackgroundBrush}"
                                           BorderBrush="{ThemeResource ConversionTileBorderBrush}"
                                           Padding="4">
                                <RelativePanel.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="{x:Bind formatter:Tile.GetLocalizedPinText(IsPinned), Mode=OneWay}" Style="{StaticResource MenuFlyoutItemIconStyle}" Command="{Binding ViewModel.PinToStartCommand, ElementName=DbPage}" CommandParameter="{x:Bind}">
                                            <MenuFlyoutItem.Tag>
                                                <FontIcon Glyph="{x:Bind formatter:Tile.GetIcon(IsPinned), Mode=OneWay}"/>
                                            </MenuFlyoutItem.Tag>
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Loading">
                                                    <core:InvokeCommandAction Command="{Binding ViewModel.UpdateTileInfoCommand, ElementName=DbPage}" CommandParameter="{x:Bind}"/>
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem x:Uid="DashboardPage_ShareRate" Command="{Binding ViewModel.ShareCommand, ElementName=DbPage}" CommandParameter="{x:Bind}" Style="{StaticResource MenuFlyoutItemIconStyle}">
                                            <MenuFlyoutItem.Tag>
                                                <FontIcon Glyph="&#xE72D;"/>
                                            </MenuFlyoutItem.Tag>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem Text="{x:Bind formatter:Currency.FormatInfo(From)}" Command="{Binding ViewModel.OpenCoinInfo, ElementName=DbPage}" CommandParameter="{x:Bind From}" Style="{StaticResource MenuFlyoutItemIconStyle}" >
                                            <MenuFlyoutItem.Tag>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage DecodePixelHeight="16" DecodePixelWidth="16"
                                                                     DecodePixelType="Logical"
                                                                     UriSource="{x:Bind FromIcon, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}" />
                                                    </Image.Source>
                                                </Image>
                                            </MenuFlyoutItem.Tag>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </RelativePanel.ContextFlyout>
                                <Image x:Name="Icon" Margin="4" Width="16" Height="16">
                                    <Image.Source>
                                        <BitmapImage DecodePixelHeight="16" DecodePixelWidth="16"
                                                     DecodePixelType="Logical"
                                                     UriSource="{x:Bind FromIcon, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}" />
                                    </Image.Source>
                                </Image>
                                <TextBlock x:Name="Direction" Margin="4,0,0,0" RelativePanel.RightOf="Icon"
                                           RelativePanel.AlignVerticalCenterWith="Icon"
                                           Text="{x:Bind formatter:Currency.FormatFromTo(From, To)}" FontWeight="SemiBold" FontSize="14" />
                                <CheckBox RelativePanel.RightOf="Direction"
                                          RelativePanel.AlignVerticalCenterWith="Icon"
                                          IsChecked="{x:Bind Pref.IsFeatured, Mode=TwoWay}" Margin="4,0,0,0"
                                          Style="{StaticResource CheckBoxStarStyle}" />
                                <TextBlock RelativePanel.AlignRightWithPanel="True" Margin="8,0" FontWeight="SemiBold"
                                           FontSize="10"
                                           Text="{x:Bind formatter:Currency.FormatVolume24Long(Volume24, From), Mode=OneWay}"
                                           Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                           HorizontalAlignment="Right" Style="{StaticResource CaptionTextBlockStyle}" />

                                <TextBlock x:Name="Rate" RelativePanel.Below="Icon" Margin="8,0,0,0"
                                           Text="{x:Bind formatter:Currency.FormatRate(Rate, To, 14), Mode=OneWay}"
                                           Style="{StaticResource SubtitleTextBlockStyle}" FontWeight="SemiBold" />
                                <TextBlock RelativePanel.RightOf="Rate" RelativePanel.AlignBottomWith="Rate"
                                           Margin="4,0,0,0" VerticalAlignment="Center" FontSize="14"
                                           Foreground="{x:Bind Change24, Converter={StaticResource ChangeBrushConverter}, Mode=OneWay}"
                                           Text="{x:Bind Change24, Converter={StaticResource StringFormatConverter}, ConverterParameter={}({0:P2}), Mode=OneWay}" />

                                <chart:RadCartesianChart RelativePanel.Below="Rate" MinHeight="50">
                                    <chart:RadCartesianChart.Palette>
                                        <chart:ChartPalette>
                                            <chart:ChartPalette.FillEntries>
                                                <chart:PaletteEntryCollection>
                                                    <SolidColorBrush Color="{ThemeResource ChartUpFillColor}" />
                                                    <SolidColorBrush Color="{ThemeResource ChartDownFillColor}" />
                                                </chart:PaletteEntryCollection>
                                            </chart:ChartPalette.FillEntries>
                                            <chart:ChartPalette.StrokeEntries>
                                                <chart:PaletteEntryCollection>
                                                    <SolidColorBrush Color="{ThemeResource ChartUpStrokeColor}" />
                                                    <SolidColorBrush Color="{ThemeResource ChartDownStrokeColor}" />
                                                </chart:PaletteEntryCollection>
                                            </chart:ChartPalette.StrokeEntries>
                                        </chart:ChartPalette>
                                    </chart:RadCartesianChart.Palette>
                                    <chart:RadCartesianChart.HorizontalAxis>
                                        <chart:CategoricalAxis ShowLabels="False" TickThickness="0"
                                                               Visibility="Collapsed" />
                                    </chart:RadCartesianChart.HorizontalAxis>
                                    <chart:RadCartesianChart.VerticalAxis>
                                        <chart:LinearAxis ShowLabels="False" TickThickness="0" Visibility="Collapsed" />
                                    </chart:RadCartesianChart.VerticalAxis>
                                    <chart:AreaSeries
                                        PaletteIndex="{x:Bind Change24, Converter={StaticResource ChartIndexConverter}, Mode=OneWay}"
                                        ItemsSource="{x:Bind RateHourlyHistory, Mode=OneWay}" StrokeThickness="2" />
                                </chart:RadCartesianChart>
                            </RelativePanel>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
                <toolkit:Loading Grid.Row="0"
                                 IsLoading="{x:Bind ViewModel.FeaturedConversionProgress.IsOperating, Mode=OneWay}">
                    <StackPanel Orientation="Horizontal">
                        <ProgressRing IsActive="True" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                        <TextBlock x:Uid="DashboardPage_ConversionLoading" Margin="12,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </toolkit:Loading>

                <Grid Grid.Row="1" Margin="0,2,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
                        <AutoSuggestBox x:Uid="DashboardPage_SearchHint" Width="268" QueryIcon="Find"
                                        Text="{x:Bind ViewModel.Filter, Mode=TwoWay}" />
                    </StackPanel>
                    <GridView x:Name="ConversionsGrid" Grid.Row="1" Margin="-8,12,-8,0" SelectionMode="None"
                              ItemsSource="{x:Bind ViewModel.Conversions, Mode=OneWay}"
                              CanDragItems="True" ScrollViewer.VerticalScrollMode="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                              CanReorderItems="True" AllowDrop="True">
                        <GridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem">
                                <Setter Property="Margin" Value="8,8" />
                            </Style>
                        </GridView.ItemContainerStyle>
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="entries:ConversionInfo">
                                <Grid Width="172" Height="104" BorderThickness="1"
                                      Background="{ThemeResource ConversionTileBackgroundBrush}"
                                      BorderBrush="{ThemeResource ConversionTileBorderBrush}" Padding="8">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="{x:Bind formatter:Tile.GetLocalizedPinText(IsPinned), Mode=OneWay}" Style="{StaticResource MenuFlyoutItemIconStyle}" Command="{Binding ViewModel.PinToStartCommand, ElementName=DbPage}" CommandParameter="{x:Bind}">
                                                <MenuFlyoutItem.Tag>
                                                    <FontIcon Glyph="{x:Bind formatter:Tile.GetIcon(IsPinned), Mode=OneWay}"/>
                                                </MenuFlyoutItem.Tag>
                                                <interactivity:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="Loading">
                                                        <core:InvokeCommandAction Command="{Binding ViewModel.UpdateTileInfoCommand, ElementName=DbPage}" CommandParameter="{x:Bind}"/>
                                                    </core:EventTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem x:Uid="DashboardPage_ShareRate" Command="{Binding ViewModel.ShareCommand, ElementName=DbPage}" CommandParameter="{x:Bind}" Style="{StaticResource MenuFlyoutItemIconStyle}">
                                                <MenuFlyoutItem.Tag>
                                                    <FontIcon Glyph="&#xE72D;"/>
                                                </MenuFlyoutItem.Tag>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem Text="{x:Bind formatter:Currency.FormatInfo(From)}" Command="{Binding ViewModel.OpenCoinInfo, ElementName=DbPage}" CommandParameter="{x:Bind From}" Style="{StaticResource MenuFlyoutItemIconStyle}" >
                                                <MenuFlyoutItem.Tag>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage DecodePixelHeight="16" DecodePixelWidth="16"
                                                                         DecodePixelType="Logical"
                                                                         UriSource="{x:Bind FromIcon, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}" />
                                                        </Image.Source>
                                                    </Image>
                                                </MenuFlyoutItem.Tag>
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </Grid.ContextFlyout>
                                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                                        <Image Width="16" Height="16" VerticalAlignment="Center">
                                            <Image.Source>
                                                <BitmapImage
                                                    UriSource="{x:Bind FromIcon, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}"
                                                    DecodePixelHeight="16"
                                                    DecodePixelWidth="16" DecodePixelType="Logical" />
                                            </Image.Source>
                                        </Image>
                                        <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Text="{x:Bind From}"
                                                   FontWeight="SemiBold" FontSize="14" />
                                        <CheckBox VerticalAlignment="Center"
                                                  IsChecked="{x:Bind Pref.IsFeatured, Mode=TwoWay}" Margin="4,0,0,0"
                                                  Style="{StaticResource CheckBoxStarStyle}" />
                                    </StackPanel>
                                    <TextBlock Grid.Row="0"
                                               Text="{x:Bind Change24, Converter={StaticResource StringFormatConverter}, ConverterParameter={}({0:P2}), Mode=OneWay}"
                                               HorizontalAlignment="Right" FontSize="14"
                                               Foreground="{x:Bind Change24, Converter={StaticResource ChangeBrushConverter}, Mode=OneWay}" />
                                    <TextBlock Grid.Row="1" Text="{x:Bind formatter:Currency.FormatRate(Rate, To, 11), Mode=OneWay}"
                                               FontWeight="SemiBold"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource SubtitleTextBlockStyle}" />
                                    <controls:ChangeIndicator Grid.Row="1" Margin="0,0,20,0"
                                                              Value="{x:Bind Change24, Mode=OneWay}"
                                                              HorizontalAlignment="Right" />
                                    <TextBlock Grid.Row="2"
                                               Text="{x:Bind formatter:Currency.FormatVolume24Long(Volume24, From), Mode=OneWay}"
                                               Style="{StaticResource CaptionTextBlockStyle}" FontSize="12"
                                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                    <ListView x:Name="ConversionsList" Grid.Row="1" Margin="0,12,0,0" SelectionMode="None"
                              ItemsSource="{x:Bind ViewModel.Conversions, Mode=OneWay}" CanDragItems="True"
                              ScrollViewer.VerticalScrollMode="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                              CanReorderItems="True" AllowDrop="True"
                              ContainerContentChanging="ConversionsList_OnContainerContentChanging"
                              DragItemsCompleted="ConversionsList_OnDragItemsCompleted">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="Padding" Value="8,0,8,0" />
                                <Setter Property="MinHeight" Value="36" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.HeaderTemplate>
                            <DataTemplate>
                                <Grid Padding="8,0" Height="36"
                                      Background="{ThemeResource ConversionListHeaderBackgroundBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" x:Uid="DashboardPage_CoinColumn" Margin="24,0,0,0"
                                               FontSize="14" VerticalAlignment="Center" />
                                    <TextBlock Grid.Column="1" x:Uid="DashboardPage_PriceColumn" FontSize="14"
                                               VerticalAlignment="Center" />
                                    <TextBlock Grid.Column="2" x:Uid="DashboardPage_VolumeColumn" FontSize="14"
                                               VerticalAlignment="Center" />
                                    <TextBlock Grid.Column="3" x:Uid="DashboardPage_ChangeColumn" Margin="0,0,20,0"
                                               FontSize="14" VerticalAlignment="Center" />
                                </Grid>
                            </DataTemplate>
                        </ListView.HeaderTemplate>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="entries:ConversionInfo">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="{x:Bind formatter:Tile.GetLocalizedPinText(IsPinned), Mode=OneWay}" Style="{StaticResource MenuFlyoutItemIconStyle}" Command="{Binding ViewModel.PinToStartCommand, ElementName=DbPage}" CommandParameter="{x:Bind}">
                                                <MenuFlyoutItem.Tag>
                                                    <FontIcon Glyph="{x:Bind formatter:Tile.GetIcon(IsPinned), Mode=OneWay}"/>
                                                </MenuFlyoutItem.Tag>
                                                <interactivity:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="Loading">
                                                        <core:InvokeCommandAction Command="{Binding ViewModel.UpdateTileInfoCommand, ElementName=DbPage}" CommandParameter="{x:Bind}"/>
                                                    </core:EventTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem x:Uid="DashboardPage_ShareRate" Command="{Binding ViewModel.ShareCommand, ElementName=DbPage}" CommandParameter="{x:Bind}" Style="{StaticResource MenuFlyoutItemIconStyle}">
                                                <MenuFlyoutItem.Tag>
                                                    <FontIcon Glyph="&#xE72D;"/>
                                                </MenuFlyoutItem.Tag>
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </Grid.ContextFlyout>
                                    <StackPanel Orientation="Horizontal" Grid.Column="0">
                                        <Image Width="16" Height="16">
                                            <Image.Source>
                                                <BitmapImage DecodePixelHeight="16" DecodePixelWidth="16"
                                                             DecodePixelType="Logical"
                                                             UriSource="{x:Bind FromIcon, TargetNullValue='ms-appx:///Assets/Images/CoinTemplate.png'}" />
                                            </Image.Source>
                                        </Image>
                                        <TextBlock Margin="8,0,0,0"
                                                   Text="{x:Bind formatter:Currency.FormatConversionName(FromFullName, From, To)}"
                                                   HorizontalAlignment="Left" />
                                        <CheckBox IsChecked="{x:Bind Pref.IsFeatured, Mode=TwoWay}" Margin="4,0,0,0"
                                                  Style="{StaticResource CheckBoxStarStyle}" />
                                    </StackPanel>
                                    <TextBlock Grid.Column="1" Text="{x:Bind formatter:Currency.FormatRate(Rate, To, 13), Mode=OneWay}"
                                               HorizontalAlignment="Left" />
                                    <TextBlock Grid.Column="2"
                                               Text="{x:Bind formatter:Currency.FormatVolume24(Volume24, From), Mode=OneWay}"
                                               HorizontalAlignment="Left" />
                                    <StackPanel Grid.Column="3" Orientation="Horizontal" >
                                        <TextBlock
                                            Foreground="{x:Bind Change24, Converter={StaticResource ChangeBrushConverter}, Mode=OneWay}"
                                            Text="{x:Bind Change24, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter={}{0:P2}}" />
                                        <controls:ChangeIndicator Margin="4,0,0,0" VerticalAlignment="Center"
                                                                  Value="{x:Bind Change24, Mode=OneWay}" />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <toolkit:Loading x:Name="LoadingConversions" Grid.Row="1"
                                     IsLoading="{x:Bind ViewModel.ConversionProgress.IsOperating, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal">
                            <ProgressRing IsActive="True"
                                          Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                            <TextBlock x:Uid="DashboardPage_ConversionLoading" Margin="12,0,0,0"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </toolkit:Loading>
                    <StackPanel x:Name="EmptyConversions" Grid.Row="1" Margin="0,12,0,0" HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Visibility="Collapsed">
                        <TextBlock x:Uid="DashboardPage_ConversionEmpty" />
                    </StackPanel>
                    <Grid x:Name="FilteredEmptyConversions" Grid.Row="1" Margin="0,12,0,0" HorizontalAlignment="Left"
                          VerticalAlignment="Top" Visibility="Collapsed">
                        <TextBlock x:Uid="DashboardPage_ConversionFilteredEmpty" />
                    </Grid>
                    <StackPanel x:Name="UnavailableConversions" Grid.Row="1" Margin="0,12,0,0"
                                HorizontalAlignment="Left" Visibility="Collapsed">
                        <TextBlock x:Uid="DashboardPage_ConversionUnavailable" />
                        <Button x:Uid="DashboardPage_TryAgainButton" Margin="0,12,0,0"
                                Command="{x:Bind ViewModel.RetryCommand}"
                                HorizontalAlignment="Left" />
                    </StackPanel>
                </Grid>
            </Grid>
        </ScrollViewer>
        <CommandBar x:Name="BottomBar" Grid.Row="2">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="DashboardPage_RefreshButton" Icon="Refresh"
                              Command="{x:Bind ViewModel.RefreshCommand}" />
                <AppBarSeparator/>
                <AppBarButton x:Uid="DashboardPage_ListViewButton" Command="{x:Bind ViewModel.ToggleViewMode}">
                    <AppBarButton.CommandParameter>
                        <viewModels:ViewMode>List</viewModels:ViewMode>
                    </AppBarButton.CommandParameter>
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xEA37;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton x:Uid="DashboardPage_GridViewButton" Command="{x:Bind ViewModel.ToggleViewMode}">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="ms-appx:///Assets/Images/Grid.png"
                                    Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                    </AppBarButton.Icon>
                    <AppBarButton.CommandParameter>
                        <viewModels:ViewMode>Grid</viewModels:ViewMode>
                    </AppBarButton.CommandParameter>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>

        <!--  Adaptive triggers  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitlePage.Margin" Value="72,15,12,7" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ConversionStates">
                <VisualState x:Name="FilteredEmpty">
                    <VisualState.Setters>
                        <Setter Target="LoadingConversions.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="FilteredEmptyConversions.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="ConversionsGrid.Opacity" Value="0" />
                        <Setter Target="ConversionsList.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Available">
                    <VisualState.Setters>
                        <Setter Target="LoadingConversions.(UIElement.Visibility)" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Empty">
                    <VisualState.Setters>
                        <Setter Target="LoadingConversions.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="EmptyConversions.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="ConversionsGrid.Opacity" Value="0" />
                        <Setter Target="ConversionsList.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unavailable">
                    <VisualState.Setters>
                        <Setter Target="UnavailableConversions.(UIElement.Visibility)" Value="Visible" />
                        <Setter Target="ConversionsGrid.Opacity" Value="0" />
                        <Setter Target="ConversionsList.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FeaturedConversionStates">
                <VisualState x:Name="FeaturedNotReady" />
                <VisualState x:Name="FeaturedAvailable">
                    <VisualState.Setters>
                        <Setter Target="FeaturedConversions.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FeaturedEmpty" />
                <VisualState x:Name="FeaturedCached" />
                <VisualState x:Name="FeaturedUnavailable" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="ViewModes">
                <VisualState x:Name="Grid">
                    <VisualState.Setters>
                        <Setter Target="ConversionsGrid.Visibility" Value="Visible" />
                        <Setter Target="ConversionsList.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="List">
                    <VisualState.Setters>
                        <Setter Target="ConversionsGrid.Visibility" Value="Collapsed" />
                        <Setter Target="ConversionsList.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <interactivity:Interaction.Behaviors>
        <behaviors:VisualStateBehavior Group="ViewModes"
                                       State="{x:Bind ViewModel.Mode, Mode=OneWay, Converter={StaticResource EnumConverter}}" />
        <behaviors:VisualStateBehavior Group="ConversionStates"
                                       State="{x:Bind ViewModel.ConversionsState, Mode=OneWay}" />
        <behaviors:VisualStateBehavior Group="FeaturedConversionStates" StatePrefix="Featured"
                                       State="{x:Bind ViewModel.FeaturedConversionState, Mode=OneWay, Converter={StaticResource EnumConverter}}" />
    </interactivity:Interaction.Behaviors>
</views:MvvmPage>

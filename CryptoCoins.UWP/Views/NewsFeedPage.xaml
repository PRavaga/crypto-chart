<local:MvvmPage
    x:Name="Page"
    x:Class="CryptoCoins.UWP.Views.NewsFeedPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CryptoCoins.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CryptoCoins.UWP.Platform.Behaviors"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:stateTrigger="using:CryptoCoins.UWP.Platform.StateTrigger"
    xmlns:entries="using:CryptoCoins.UWP.Models.Services.Entries"
    xmlns:formatter="using:CryptoCoins.UWP.Views.Formatter"
    xmlns:selectors="using:CryptoCoins.UWP.Platform.Selectors"
    xmlns:attached="using:CryptoCoins.UWP.Platform.Attached"
    xmlns:system="using:System"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    DataContext="{Binding NewsFeed, Source={StaticResource Locator}}">

    <local:MvvmPage.Resources>
        <Style x:Key="NewsListDesktopStyle" TargetType="ItemsControl">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal" Margin="-6,0,-6,0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate" Value="{StaticResource NewsListDesktopItemTemplate}" />
        </Style>
        <DataTemplate x:Key="NewsListDesktopItemTemplate" x:DataType="entries:NewsModel">
            <Button Style="{StaticResource TransparentButtonStyle}"
                    Command="{Binding DataContext.OpenNewsCommand, ElementName=Page, Mode=OneTime}"
                    CommandParameter="{x:Bind}">
                <Grid Width="270" Height="196" Margin="6" BorderThickness="1"
                      BorderBrush="{ThemeResource ConversionTileBorderBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="128" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="3,3,3,4">
                        <Border.Background>
                            <SolidColorBrush Color="{ThemeResource SystemAccentColor}"/>
                        </Border.Background>
                        <Image Source="../Assets/LargeTile.png"/>
                    </Border>
                    <Image Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="3,3,3,4"
                           Stretch="UniformToFill" HorizontalAlignment="Center">
                        <Image.Source>
                            <BitmapImage UriSource="{x:Bind MediaLink}" />
                        </Image.Source>
                    </Image>
                    <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="11,0,11,0"
                               MaxLines="2" Text="{x:Bind Title}"
                               Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="11,6,11,0" Text="{x:Bind Source.ToUpper()}"
                               FontSize="10"
                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                               Style="{StaticResource CaptionTextBlockStyle}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Margin="11,6,11,0"
                               Text="{x:Bind formatter:DateTime.TimeAgo(PublicationTime, x:True)}" FontSize="10"
                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                               Style="{StaticResource CaptionTextBlockStyle}" />
                </Grid>
                <Button.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="NewsFeedPage_ShareMenu" Style="{StaticResource MenuFlyoutItemIconStyle}" Command="{Binding ViewModel.ShareCommand, ElementName=Page}" CommandParameter="{x:Bind}">
                            <MenuFlyoutItem.Tag>
                                <FontIcon Glyph="&#xE72D;"/>
                            </MenuFlyoutItem.Tag>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </Button.ContextFlyout>
            </Button>
        </DataTemplate>
        <Style x:Key="NewsListMobileStyle" TargetType="ItemsControl">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate" Value="{StaticResource NewsListMobileItemTemplate}" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="NewsListMobileItemTemplate" x:DataType="entries:NewsModel">
            <Button Style="{StaticResource TransparentButtonStyle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                    Command="{Binding DataContext.OpenNewsCommand, ElementName=Page, Mode=OneTime}"
                    CommandParameter="{x:Bind}">
                <Grid Height="82" Padding="0,12,0,12" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch"
                      BorderBrush="{ThemeResource ConversionTileBorderBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">
                        <Border.Background>
                            <SolidColorBrush Color="{ThemeResource SystemAccentColor}"/>
                        </Border.Background>
                        <Image Source="../Assets/SmallTile.png"/>
                    </Border>
                    <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Center"
                           Stretch="UniformToFill">
                        <Image.Source>
                            <BitmapImage UriSource="{x:Bind MediaLink}" />
                        </Image.Source>
                    </Image>
                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="12,0,0,0"
                               MaxLines="2" Text="{x:Bind Title}"
                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                               Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Margin="12,0,0,0" FontSize="10" VerticalAlignment="Bottom"
                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                               Style="{StaticResource CaptionTextBlockStyle}">
                        <Run Text="{x:Bind Source}" />
                        <Run Text=" | " />
                        <Run Text="{x:Bind formatter:DateTime.TimeAgo(PublicationTime, x:True)}" />
                    </TextBlock>
                </Grid>
                <Button.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="NewsFeedPage_ShareMenu" Style="{StaticResource MenuFlyoutItemIconStyle}" Command="{Binding ViewModel.ShareCommand, ElementName=Page}" CommandParameter="{x:Bind}">
                            <MenuFlyoutItem.Tag>
                                <FontIcon Glyph="&#xE72D;"/>
                            </MenuFlyoutItem.Tag>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </Button.ContextFlyout>
            </Button>
        </DataTemplate>


    </local:MvvmPage.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock x:Uid="NewsFeedPage_Title" Grid.Row="0" x:Name="Title" Style="{StaticResource PageTitleStyle}"
                   Margin="{StaticResource PageTitleFullMargin}" />


        <ScrollViewer x:Name="NewsList" Grid.Row="1" Margin="0,12,0,0" VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Disabled">
            <ItemsControl x:Name="NewsItemsControl" Margin="{StaticResource LeftRightMargin}"
                          ItemsSource="{x:Bind ViewModel.News, Mode=OneWay}" />
        </ScrollViewer>
        <StackPanel x:Name="EmptyTemplate" Margin="0,0,0,48" Grid.Row="1" VerticalAlignment="Center"
                    HorizontalAlignment="Center" x:DeferLoadStrategy="Lazy"
                    Visibility="Collapsed">
            <BitmapIcon UriSource="/Assets/Images/NewsBig.png"
                        Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Width="96" Height="96"
                        HorizontalAlignment="Center" />
            <TextBlock x:Uid="NewsFeedPage_EmptyTemplateLine1" HorizontalAlignment="Center"
                       Style="{StaticResource TitleTextBlockStyle}" />
            <TextBlock x:Uid="NewsFeedPage_EmptyTemplateLine2" HorizontalAlignment="Center" Margin="0,6,0,0" />
        </StackPanel>
        <StackPanel x:Name="UnavailableTemplate" Margin="0,0,0,48"
                    Grid.Row="1" VerticalAlignment="Center"
                    HorizontalAlignment="Center" x:DeferLoadStrategy="Lazy"
                    Visibility="Collapsed">
            <BitmapIcon UriSource="/Assets/Images/NewsBig.png"
                        Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" Width="96"
                        Height="96" HorizontalAlignment="Center" />
            <TextBlock x:Uid="NewsFeedPage_UnavailableTemplateLine1" HorizontalAlignment="Center" />
            <TextBlock x:Uid="NewsFeedPage_UnavailableTemplateLine2" HorizontalAlignment="Center" />
            <Button x:Uid="PortfolioPage_TryAgainButton" Margin="0,12,0,0"
                    Command="{x:Bind ViewModel.RefreshNewsCommand}"
                    HorizontalAlignment="Center" />
        </StackPanel>
        <controls:Loading x:Name="LoadingTemplate" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                          HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                          IsLoading="{x:Bind ViewModel.ProgressState.IsOperating, Mode=OneWay}"
                          Visibility="Collapsed">
            <!--<controls:Loading.Background>
                <SolidColorBrush Color="{ThemeResource SystemAltHighColor}" Opacity="0.5"></SolidColorBrush>
            </controls:Loading.Background>-->
            <StackPanel Orientation="Horizontal">
                <ProgressRing IsActive="True" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                <TextBlock x:Uid="NewsFeedPage_Loading" Margin="12,0,0,0" VerticalAlignment="Center" />
            </StackPanel>
        </controls:Loading>


        <CommandBar x:Name="CommandBar" Grid.Row="2">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="NewsFeedPage_RefreshButton" Icon="Refresh"
                              Command="{x:Bind ViewModel.RefreshNewsCommand}" />
                <AppBarButton x:Uid="NewsFeedPage_NewsSources" AllowFocusOnInteraction="True">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE762;" />
                    </AppBarButton.Icon>
                    <AppBarButton.Flyout>
                        <Flyout>
                            <ListBox ItemsSource="{x:Bind ViewModel.NewsSources, Mode=OneWay}" SelectionMode="Multiple">
                                <ListBox.ItemTemplate>
                                    <DataTemplate x:DataType="entries:NewsSource">
                                        <TextBlock Text="{x:Bind Source}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <interactivity:Interaction.Behaviors>
                                    <behaviors:NewsSelectBehavior SelectionChanged="{x:Bind ViewModel.OnNewsSourcesChanged}" />
                                </interactivity:Interaction.Behaviors>
                            </ListBox>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Title.Margin" Value="{StaticResource PageTitleNarrowFullMargin}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LoadingStates">
                <VisualState x:Name="Loading">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.ProgressState.IsOperating, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NewsItemsControl.Opacity" Value="0.2"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NotLoading">
                    <VisualState.StateTriggers>
                        
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="DeviceGroup">
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <stateTrigger:DeviceFamilyTrigger DeviceFamily="Windows.Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NewsItemsControl.Style" Value="{StaticResource NewsListMobileStyle}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NewsItemsControl.Style" Value="{StaticResource NewsListDesktopStyle}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="DataState">
                <VisualState x:Name="Available" />
                <VisualState x:Name="Cached">
                    <VisualState.Setters>
                        <Setter Target="LoadingTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Empty">
                    <VisualState.Setters>
                        <Setter Target="NewsList.Visibility" Value="Collapsed" />

                        <Setter Target="EmptyTemplate.Visibility" Value="Visible" />
                        <Setter Target="LoadingTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Unavailable">
                    <VisualState.Setters>
                        <Setter Target="NewsList.Visibility" Value="Collapsed" />

                        <Setter Target="UnavailableTemplate.Visibility" Value="Visible" />
                        <Setter Target="LoadingTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NotReady">
                    <VisualState.Setters>
                        <Setter Target="NewsList.Visibility" Value="Collapsed" />

                        <Setter Target="LoadingTemplate.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <interactivity:Interaction.Behaviors>
        <behaviors:VisualStateBehavior Group="DataState"
                                       State="{x:Bind ViewModel.DataState, Mode=OneWay, Converter={StaticResource EnumConverter}}" />
    </interactivity:Interaction.Behaviors>
</local:MvvmPage>
